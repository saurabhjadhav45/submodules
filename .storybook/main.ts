import { StorybookConfig } from '@storybook/react-vite';
import { mergeConfig } from 'vite';
import svgr from 'vite-plugin-svgr';

const storybookConfig: StorybookConfig = {
  stories: ['../src/**/*.stories.@(ts|tsx)'],
  addons: [
    '@storybook/addon-docs', // Enables autogenerated docs for components
    // Add more addons as needed:
    // '@storybook/addon-essentials', // Controls, actions, viewport, backgrounds
    // '@storybook/addon-interactions', // Simulates user interactions
    // '@storybook/addon-links', // Enables navigation between stories
  ],

  framework: {
    name: '@storybook/react-vite',
    options: {},
  },

  typescript: {
    check: process.env.NODE_ENV === 'production',
    reactDocgen: 'react-docgen-typescript',
    reactDocgenTypescriptOptions: {
      shouldExtractLiteralValuesFromEnum: true,
      propFilter: (prop) => (prop.parent ? !/node_modules/.test(prop.parent.fileName) : true),
    },
  },

  viteFinal: async (config) => {
    return mergeConfig(config, {
      plugins: [
        svgr({
          svgrOptions: {
            exportType: 'default',
            ref: true,
            svgo: false,
            titleProp: true,
          },
          include: '**/*.svg',
        }),
      ],
      resolve: {
        // Keep .js/.jsx for compatibility with some node_modules packages (e.g., lodash, react-dom)
        extensions: ['.mjs', '.js', '.ts', '.jsx', '.tsx', '.json', '.scss'],
      },
      optimizeDeps: {
        include: ['@storybook/react', '@storybook/addon-docs', 'react', 'react-dom'],
      },
      assetsInclude: ['**/*.svg'],
    });
  },
};

export default storybookConfig;
